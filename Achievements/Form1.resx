<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Cf8DAwP/AAAA/wAAAP8AAAD/AQEB/19fX/93d3f/ZWVl/2JiYv9NTU23GhoaFcXFxRbCwsLLmZmZ/4mJ
        if+ZmZn/Hh4e/wAAAP8AAAD/BwcH/yMjI/9RUVH/dnZ2/3p6ev+AgID/e3t7/6Ghof+YmJj/goKC/3Z2
        dv9ycnL/Y2Nj/z8/P/8YGBj/BAQE/wAAAP8AAAD/PDw8/4KCgv9cXFz/Xl5e/1VVVdYuLi4qzMzMKMLC
        wt6rq6v/paWl/5CQkP8PDw//AAAA/xEREf9KSkr/enp6/4iIiP+Xl5f/srKy/7i4uP+9vb3/tra2/7Oz
        s/+tra3/o6Oj/5WVlf+AgID/b29v/1lZWf8uLi7/CAgI/wAAAP8mJib/hoaG/2xsbP9ra2v/W1tb5jg4
        OD3R0dExx8fH5q6urv+ioqL/ioqK/wkJCf8nJyf/cXFx/5OTk/+YmJj/mpqa/7Ozs//Gxsb/r6+v/4uL
        i/+tra3/ra2t/4eHh/+UlJT/oqKi/4yMjP94eHj/cXFx/2lpaf9DQ0P/EBAQ/xwcHP+Kior/hYWF/2tr
        a/9eXl7sPDw8RdTU1DHOzs7mwsLC/6Wlpf+Kior/ICAg/1paWv96enr/hISE/5GRkf+xsbH/0tLS/8LC
        wv87Ozv/GBgY/5KSkv9wcHD/BgYG/y4uLv+cnJz/m5ub/319ff9mZmb/W1tb/05OTv8xMTH/JiYm/42N
        jf+Xl5f/dXV1/19fX+s+Pj5C2NjYJs3Nzd26urr/q6ur/5iYmP9GRkb/j4+P/6enp/+jo6P/tra2/9fX
        1//g4OD/vLy8/x0dHf8mJib/goKC/2tra/8SEhL/Gxsb/5iYmP+kpKT/lZWV/3p6ev9wcHD/cHBw/1FR
        Uf85OTn/g4OD/319ff95eXn/YGBg5EFBQTXb29sV0dHRyXt7e/9XV1f/pKSk/3x8fP97e3v/hISE/6en
        p/+9vb3/rKys/3Nzc/8/Pz//CgoK/wAAAP8GBgb/Dg4O/woKCv8ICAj/MjIy/1paWv+BgYH/hYWF/2xs
        bP9SUlL/TExM/1FRUf9kZGT/Pz8//1NTU/9fX1/QQUFBH+Tk5ATY2Niimpqa/2FhYf+dnZ3/ampq/4CA
        gP+/v7//mZmZ/1NTU/8uLi7/BQUF/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/BQUF/y4u
        Lv9HR0f/d3d3/319ff9HR0f/Wlpa/2JiYv9JSUn/W1tb/1tbW6s5OTkJ29vbAN7e3me2trb9TU1N/3V1
        df+bm5v/kZGR/2lpaf8zMzP/JiYm/y8vL/8bGxv/AQEB/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wIC
        Av8dHR3/MTEx/ykpKf82Njb/VVVV/1tbW/9gYGD/T09P/0pKSv9hYWH+WFhYcWdnZwDe3t4A4ODgKdDQ
        0OCFhYX/WVlZ/4eHh/9aWlr/BgYG/yMjI/8yMjL/Q0ND/0xMTP8PDw//AAAA/wAAAP8AAAD/AAAA/wAA
        AP8BAQH/HBwc/0JCQv8oKCj/MjIy/yMjI/8KCgr/XFxc/1xcXP9ERET/U1NT/2dnZ+NUVFQvWFhYANvb
        2wDi4uID4ODglaioqP9qamr/hoaG/4iIiP8YGBj/BwcH/zg4OP92dnb/a2tr/zc3N/8qKir/GBgY/w8P
        D/8QEBD/HR0d/zQ0NP9LS0v/aGho/0JCQv8hISH/BwcH/y0tLf+Li4v/UVFR/2ZmZv90dHT/YWFhmmBg
        YAVsbGwA0NDQAODg4ADh4eEy1tbW4ZmZmf9XV1f/iYmJ/4GBgf8QEBD/TU1N/4aGhv87Ozv/MDAw/0VF
        Rf84ODj/PDw8/z4+Pv89PT3/Ojo6/zY2Nv9ERET/Wlpa/xwcHP8iIiL/h4eH/2dnZ/9ERET/Y2Nj/3Bw
        cONdXV03VVVVAIGBgQAAAAAA2traANXV1QHh4eF2wMDA+oSEhP9qamr/j4+P/4GBgf8kJCT/S0tL/1pa
        Wv9NTU3/Pj4+/y4uLv8nJyf/NDQ0/yoqKv8uLi7/QkJC/zU1Nf8mJib/MjIy/4mJif+QkJD/Tk5O/09P
        T/93d3f7aGhoeo+PjwKAgIAAAAAAAAAAAAAAAAAA4ODgAODg4BDg4OCkwsLC/3V1df+Dg4P/i4uL/46O
        jv88PDz/JiYm/0dHR/9ZWVn/Wlpa/1dXV/9SUlL/UVFR/0BAQP8wMDD/IyMj/1BQUP+enp7/lZWV/0ND
        Q/9NTU3/fn5+/3R0dKdwcHARb29vAAAAAAAAAAAAAAAAAAAAAADX19cA4ODgAODg4B7a2tqzxMTE/35+
        fv9jY2P/lZWV/6qqqv+FhYX/R0dH/yoqKv8kJCT/IyMj/yMjI/8lJSX/MTEx/1RUVP+EhIT/lpaW/4WF
        hf+jo6P/enp6/3h4eP9+fn61eXl5H3BwcADLy8sAAAAAAAAAAAAAAAAAAAAAAAAAAADd3d0A4eHhAOHh
        4R7g4OCkw8PD+pGRkf9qamr/pqam/5qamv/Dw8P/rq6u/4qKiv+Hh4f/h4eH/4aGhv+Hh4f/hoaG/11d
        Xf94eHj/TExM/4WFhf+bm5v6iYmJpYWFhR90dHQA1dXVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADa2toA4ODgAODg4BDh4eF21NTU4qioqP+VlZX/bm5u/8vLy/+Pj4//XFxc/2ZmZv9jY2P/Z2dn/3Bw
        cP99fX3/ZWVl/2xsbP+Pj4//mZmZ4pOTk3eVlZUQjIyMANvb2wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA39/fAN7e3gLf398y3t7elczMzOC5ubn9ycnJ/5qamv+JiYn/cXFx/3t7
        e/+Kior/oaGh/52dnf+srKz9pqam4aioqJWkpKQyu7u7ArKysgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN3d3QDe3t4E3NzcKNnZ2WfT09Oh0NDQyMjI
        yN3BwcHlv7+/5cDAwN28vLzIurq6obq6ume8vLwox8fHBMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9/f0A09PTAOXl
        5QTa2toU1tbWJtPT0y/Q0NAvz8/PJs7OzhTa2toEu7u7AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/+AAA//AAAH/gAAA/wAAAH4AAAA8AAAAPAAAABgAAAAYAA
        AAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAYAAAAHAAAADwAAAA+AA
        AAfwAAAP+AAAH/wAAD/+AAB//4AB///wD/8=
</value>
  </data>
</root>